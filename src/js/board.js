import { db } from "../content/firebase.js";
import { formatDateUsingLocale } from "./utils.js";

document.addEventListener("DOMContentLoaded", async () => {
    const diaryList = document.getElementById("diary-list");
    diaryList.innerHTML = ""; // Í∏∞Ï°¥ Î™©Î°ù Ï¥àÍ∏∞Ìôî

    try {
        const diarySnapshot = await db.collection("diary").orderBy("created_at", "desc").get();

        diarySnapshot.forEach(async (doc) => {
            const diary = doc.data();
            const diaryId = doc.data().id;

            const diaryDiv = document.createElement("div");
            diaryDiv.classList.add("diary");
            diaryDiv.id = `diary-${diaryId}`; // Firestore Î¨∏ÏÑú ID ÏÇ¨Ïö©
            const diaryContent = diary.content.replace(/\\n/g, "\n");

            // Í≤åÏãúÍ∏Ä ÎÇ¥Ïö©
            diaryDiv.innerHTML = `
                <div class="diaryFrame">
                    <div class="diaryHeader">${formatDateUsingLocale(diary.created_at)}</div>
                    <div class="diaryContent">
                        <p>${diaryContent.replace(/\n/g, "<br>")}</p>
                    </div>
                    <div class="divideLine"></div>
                    <p>Í≥µÍ∞ú ÏÑ§Ï†ï: Ï†ÑÏ≤¥ Í≥µÍ∞ú</p>
                    <div class="commentFrame" id="comments-${diaryId}">
                        <!-- ÎåìÍ∏Ä Î∂àÎü¨Ïò§Í∏∞ -->
                    </div>
                </div>
            `;

            diaryList.appendChild(diaryDiv);

            // üîΩ FirestoreÏóêÏÑú ÎåìÍ∏Ä Î∂àÎü¨Ïò§Í∏∞ üîΩ
            const commentFrame = document.getElementById(`comments-${diaryId}`);
            const commentsSnapshot = await db.collection("diary_comments")
                .where("post_id", "==", diaryId) // Ìï¥Îãπ Í≤åÏãúÍ∏ÄÏùò ÎåìÍ∏ÄÎßå ÌïÑÌÑ∞ÎßÅ
                .orderBy("created_at", "asc")
                .get();

            let comments = [];
            commentsSnapshot.forEach((commentDoc) => {
                comments.push({ id: commentDoc.id, ...commentDoc.data() });
            });

            // ÎåÄÎåìÍ∏ÄÏùÑ Ï†úÏô∏Ìïú ÎåìÍ∏ÄÎßå Î®ºÏ†Ä Ï∂úÎ†•
            comments.filter(comment => !comment.parent_id).forEach(comment => {
                const commentDiv = document.createElement("div");
                commentDiv.classList.add("comment");
                commentDiv.innerHTML = `
                    <span class="userName">${comment.author}</span> ${comment.content}
                `;

                // Ìï¥Îãπ ÎåìÍ∏ÄÏùò ÎåÄÎåìÍ∏Ä Ï∂úÎ†•
                const replies = comments.filter(reply => reply.parent_id === comment.id);
                replies.forEach(reply => {
                    const recommentDiv = document.createElement("div");
                    recommentDiv.classList.add("recomment");
                    recommentDiv.innerHTML = `
                        <span class="userName">${reply.author}</span> ${reply.content}
                    `;
                    commentDiv.appendChild(recommentDiv);
                });

                commentFrame.appendChild(commentDiv);
            });
        });

    } catch (error) {
        console.error("Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:", error);
    }
});
