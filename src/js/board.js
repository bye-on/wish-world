
// document.addEventListener("DOMContentLoaded", () => {
//     // Í≤åÏãúÍ∏Ä Î∂àÎü¨Ïò§Í∏∞
//     fetch("http://localhost:3000/diarys")
//       .then(res => res.json())
//       .then(diarys => {
//         const diaryList = document.getElementById("diary-list");
//         diaryList.innerHTML = ""; // Í∏∞Ï°¥ Î™©Î°ù Ï¥àÍ∏∞Ìôî
  
//         diarys.forEach(diary => {
//           const diaryDiv = document.createElement("div");
//           diaryDiv.classList.add("diary");
//           diaryDiv.id = `diary-${diary.id}`; // Í∞Å Í≤åÏãúÍ∏ÄÏóê Í≥†Ïú† ID Ï∂îÍ∞Ä
  
//           // Í≤åÏãúÍ∏Ä ÎÇ¥Ïö©
//           diaryDiv.innerHTML = `
//           <div class="diaryFrame">
//             <div class="diaryHeader">${formatDateUsingLocale(diary.created_at)}</div>
//             <div class="diaryContent">
//               <p>${diary.content.replace(/\n/g, "<br>")}</p>
//             </div>
//             <div class="divideLine"></div>
//             <p>Í≥µÍ∞ú ÏÑ§Ï†ï: Ï†ÑÏ≤¥ Í≥µÍ∞ú</p>
//             <div class="commentFrame" id="comments-${diary.id}">
//               <!-- ÎåìÍ∏ÄÏùÄ Ïó¨Í∏∞ÏÑú Î∂àÎü¨Ïò¥ -->
//             </div>
//             </div>
//           `;
  
//           // ÎåìÍ∏Ä Î∂àÎü¨Ïò§Í∏∞
//           fetch(`http://localhost:3000/diary_comments/${diary.id}`)
//             .then(res => res.json())
//             .then(comments => {
//               const commentFrame = document.getElementById(`comments-${diary.id}`);
  
//               // ÎåÄÎåìÍ∏ÄÏùÑ Ï†úÏô∏Ìïú ÎåìÍ∏ÄÎßå Î®ºÏ†Ä Ï∂úÎ†•
//               comments.filter(comment => !comment.parent_id).forEach(comment => {
//                 const commentDiv = document.createElement("div");
//                 commentDiv.classList.add("comment");
//                 commentDiv.innerHTML = `
//                   <span class="userName">${comment.author}</span> ${comment.content}
//                 `;
  
//                 // Ìï¥Îãπ ÎåìÍ∏ÄÏóê ÎåÄÌïú ÎåÄÎåìÍ∏ÄÏùÑ Ï∂úÎ†•
//                 const replies = comments.filter(reply => reply.parent_id === comment.id);
//                 replies.forEach(reply => {
//                   const recommentDiv = document.createElement("div");
//                   recommentDiv.classList.add("recomment");
//                   recommentDiv.innerHTML = `
//                     <span class="userName">${reply.author}</span> ${reply.content}
//                   `;
//                   commentDiv.appendChild(recommentDiv);
//                 });
  
//                 commentFrame.appendChild(commentDiv);
//               });
//             });
  
//           diaryList.appendChild(diaryDiv);
//         });
//       });
//   });
  

import { db } from "../content/firebase.js"; // Firebase ÏÑ§Ï†ïÏùÑ Îî∞Î°ú Í¥ÄÎ¶¨ÌïòÎäî Í≤ΩÏö∞

function formatDateUsingLocale(timestamp) {
    if (!timestamp || !timestamp.toDate) return "Ïïå Ïàò ÏóÜÏùå";
    const date = timestamp.toDate();

    return date.toLocaleString('ko-KR', {
        year: '2-digit',
        month: '2-digit',
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hour12: false // 24ÏãúÍ∞ÑÏ†ú
    }).replace(/\//g, '-').replace(',', ''); // ÎÇ†Ïßú Íµ¨Î∂Ñ Í∏∞Ìò∏Î•º "-"Î°ú Î∞îÍøîÏ§å
}

document.addEventListener("DOMContentLoaded", async () => {
    const diaryList = document.getElementById("diary-list");
    diaryList.innerHTML = ""; // Í∏∞Ï°¥ Î™©Î°ù Ï¥àÍ∏∞Ìôî

    try {
        const diarySnapshot = await db.collection("diary").orderBy("created_at", "desc").get();

        diarySnapshot.forEach(async (doc) => {
            const diary = doc.data();
            const diaryId = doc.data().id;

            const diaryDiv = document.createElement("div");
            diaryDiv.classList.add("diary");
            diaryDiv.id = `diary-${diaryId}`; // Firestore Î¨∏ÏÑú ID ÏÇ¨Ïö©
            const diaryContent = diary.content.replace(/\\n/g, "\n");

            // Í≤åÏãúÍ∏Ä ÎÇ¥Ïö©
            diaryDiv.innerHTML = `
                <div class="diaryFrame">
                    <div class="diaryHeader">${formatDateUsingLocale(diary.created_at)}</div>
                    <div class="diaryContent">
                        <p>${diaryContent.replace(/\n/g, "<br>")}</p>
                    </div>
                    <div class="divideLine"></div>
                    <p>Í≥µÍ∞ú ÏÑ§Ï†ï: Ï†ÑÏ≤¥ Í≥µÍ∞ú</p>
                    <div class="commentFrame" id="comments-${diaryId}">
                        <!-- ÎåìÍ∏Ä Î∂àÎü¨Ïò§Í∏∞ -->
                    </div>
                </div>
            `;

            diaryList.appendChild(diaryDiv);

            // üîΩ FirestoreÏóêÏÑú ÎåìÍ∏Ä Î∂àÎü¨Ïò§Í∏∞ üîΩ
            const commentFrame = document.getElementById(`comments-${diaryId}`);
            const commentsSnapshot = await db.collection("diary_comments")
                .where("post_id", "==", diaryId) // Ìï¥Îãπ Í≤åÏãúÍ∏ÄÏùò ÎåìÍ∏ÄÎßå ÌïÑÌÑ∞ÎßÅ
                .orderBy("created_at", "asc")
                .get();

            let comments = [];
            commentsSnapshot.forEach((commentDoc) => {
                comments.push({ id: commentDoc.id, ...commentDoc.data() });
            });

            // ÎåÄÎåìÍ∏ÄÏùÑ Ï†úÏô∏Ìïú ÎåìÍ∏ÄÎßå Î®ºÏ†Ä Ï∂úÎ†•
            comments.filter(comment => !comment.parent_id).forEach(comment => {
                const commentDiv = document.createElement("div");
                commentDiv.classList.add("comment");
                commentDiv.innerHTML = `
                    <span class="userName">${comment.author}</span> ${comment.content}
                `;

                // Ìï¥Îãπ ÎåìÍ∏ÄÏùò ÎåÄÎåìÍ∏Ä Ï∂úÎ†•
                const replies = comments.filter(reply => reply.parent_id === comment.id);
                replies.forEach(reply => {
                    const recommentDiv = document.createElement("div");
                    recommentDiv.classList.add("recomment");
                    recommentDiv.innerHTML = `
                        <span class="userName">${reply.author}</span> ${reply.content}
                    `;
                    commentDiv.appendChild(recommentDiv);
                });

                commentFrame.appendChild(commentDiv);
            });
        });

    } catch (error) {
        console.error("Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:", error);
    }
});
